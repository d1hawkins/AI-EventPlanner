name: Deploy to Azure

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install --without google --no-root || (sleep 10 && poetry install --without google --no-root) 
    
    - name: Run tests
      run: |
        cp .env.test .env
        CI=true poetry run pytest
    
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
    
    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/ai-event-planner:${{ github.sha }} .
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/ai-event-planner:${{ github.sha }}
    
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'ai-event-planner'
        images: '${{ secrets.ACR_LOGIN_SERVER }}/ai-event-planner:${{ github.sha }}'
    
    - name: Run database migrations
      run: |
        # Get publishing credentials
        CREDS=$(az webapp deployment list-publishing-credentials --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ai-event-planner --query "{username:publishingUserName, password:publishingPassword}" -o json)
        USERNAME=$(echo $CREDS | jq -r '.username')
        PASSWORD=$(echo $CREDS | jq -r '.password')
        
        # Use a simpler approach to run the migration script
        echo "Running migrations..."
        RESPONSE=$(curl -s -w "\n%{http_code}" -X POST -u "$USERNAME:$PASSWORD" \
          -H "Content-Type: application/json" \
          https://ai-event-planner.scm.azurewebsites.net/api/command \
          -d "{\"command\":\"python -m scripts.migrate\", \"dir\":\"/home/site/wwwroot\"}")
        
        # Extract status code and response body
        HTTP_STATUS=$(echo "$RESPONSE" | tail -n1)
        RESPONSE_BODY=$(echo "$RESPONSE" | sed '$d')
        
        echo "Migration response: $RESPONSE_BODY"
        echo "HTTP status: $HTTP_STATUS"
        
        # Check if the request was successful
        if [ "$HTTP_STATUS" -ne 200 ]; then
          echo "Migration failed with status $HTTP_STATUS"
          echo "Response: $RESPONSE_BODY"
          exit 1
        fi
        
        # Check if the response contains error messages
        if echo "$RESPONSE_BODY" | grep -i "error"; then
          echo "Migration script reported errors"
          exit 1
        fi
        
        echo "Migration completed successfully"
